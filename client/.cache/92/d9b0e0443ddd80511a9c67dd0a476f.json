{"id":"components/FormLoginOrRegister.vue","dependencies":[{"name":"/home/jetly/Documents/phase2/week2/kanban/client/package.json","includedInParent":true,"mtime":1581683274909},{"name":"_css_loader","parent":"/home/jetly/Documents/phase2/week2/kanban/client/components/FormLoginOrRegister.vue","resolved":"/usr/lib/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"vue-hot-reload-api","parent":"/home/jetly/Documents/phase2/week2/kanban/client/components/FormLoginOrRegister.vue","resolved":"/home/jetly/Documents/phase2/week2/kanban/client/node_modules/vue-hot-reload-api/dist/index.js"},{"name":"vue","parent":"/home/jetly/Documents/phase2/week2/kanban/client/components/FormLoginOrRegister.vue","resolved":"/home/jetly/Documents/phase2/week2/kanban/client/node_modules/vue/dist/vue.runtime.esm.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  props: ['value', 'type', 'typechange']\n};\nexports.default = _default;\n        var $d014e8 = exports.default || module.exports;\n      \n      if (typeof $d014e8 === 'function') {\n        $d014e8 = $d014e8.options;\n      }\n    \n        /* template */\n        Object.assign($d014e8, (function () {\n          var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"container\", staticStyle: { height: \"100vh\" } }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-sm-9 col-md-7 col-lg-5 mx-auto \" }, [\n          _c(\"div\", { staticClass: \"card card-signin my-5\" }, [\n            _c(\"div\", { staticClass: \"card-body\" }, [\n              _c(\"h5\", { staticClass: \"card-title text-center\" }, [\n                _vm._v(_vm._s(_vm.type))\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"form\",\n                {\n                  staticClass: \"form-signin\",\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      return _vm.$emit(\"submit\")\n                    }\n                  }\n                },\n                [\n                  _c(\"div\", { staticClass: \"form-label-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.value.email,\n                          expression: \"value.email\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: { type: \"text\", placeholder: \"Email address\" },\n                      domProps: { value: _vm.value.email },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.value, \"email\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"label\", { attrs: { for: \"inputEmail\" } }, [\n                      _vm._v(\"Email address\")\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.value.name != null\n                    ? _c(\"div\", { staticClass: \"form-label-group\" }, [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.value.name,\n                              expression: \"value.name\"\n                            }\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: { type: \"text\", placeholder: \"Name\" },\n                          domProps: { value: _vm.value.name },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(_vm.value, \"name\", $event.target.value)\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"label\", { attrs: { for: \"inputPassword\" } }, [\n                          _vm._v(\"Name\")\n                        ])\n                      ])\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"form-label-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.value.password,\n                          expression: \"value.password\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: { type: \"password\", placeholder: \"Password\" },\n                      domProps: { value: _vm.value.password },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.value, \"password\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"label\", { attrs: { for: \"inputPassword\" } }, [\n                      _vm._v(\"Password\")\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass:\n                        \"btn btn-lg btn-primary btn-block text-uppercase\",\n                      attrs: { type: \"submit\" }\n                    },\n                    [_vm._v(_vm._s(_vm.type))]\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"br\"),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass:\n                    \"btn btn-lg btn-primary btn-block text-uppercase\",\n                  attrs: { type: \"btn\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.$emit(\"change\")\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.typechange))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass:\n                    \"btn btn-lg btn-primary btn-block text-uppercase\",\n                  attrs: { type: \"btn\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.$emit(\"googlelogin\")\n                    }\n                  }\n                },\n                [_vm._v(\"Google Login\")]\n              )\n            ])\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n          return {\n            render: render,\n            staticRenderFns: staticRenderFns,\n            _compiled: true,\n            _scopeId: null,\n            functional: undefined\n          };\n        })());\n      \n    /* hot reload */\n    (function () {\n      if (module.hot) {\n        var api = require('vue-hot-reload-api');\n        api.install(require('vue'));\n        if (api.compatible) {\n          module.hot.accept();\n          if (!module.hot.data) {\n            api.createRecord('$d014e8', $d014e8);\n          } else {\n            api.reload('$d014e8', $d014e8);\n          }\n        }\n\n        \n        var reloadCSS = require('_css_loader');\n        module.hot.dispose(reloadCSS);\n        module.hot.accept(reloadCSS);\n      \n      }\n    })();"},"sourceMaps":{"js":{"mappings":[{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":35,"column":0},"generated":{"line":40,"column":15}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":0}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":2}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":7}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":9}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":10}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":17}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":19}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":25}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":27}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":39}},{"source":"components/FormLoginOrRegister.vue","name":null,"original":{"line":35,"column":0},"generated":{"line":42,"column":0}}],"sources":{"components/FormLoginOrRegister.vue":"<template>\n  <div>\n      <div class=\"container\" style=\"height:100vh;\">\n        <div class=\"row\" >\n          <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto \">\n            <div class=\"card card-signin my-5\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title text-center\">{{type}}</h5>\n                <form class=\"form-signin\" @submit.prevent=\"$emit('submit')\">\n                  <div class=\"form-label-group\">\n                    <input type=\"text\"  class=\"form-control\" placeholder=\"Email address\" v-model=\"value.email\">\n                    <label for=\"inputEmail\">Email address</label>\n                  </div>\n                  <div class=\"form-label-group\" v-if=\"value.name != null\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Name\" v-model=\"value.name\" >\n                    <label for=\"inputPassword\">Name</label>\n                  </div>\n                  <div class=\"form-label-group\">\n                    <input type=\"password\"  class=\"form-control\" placeholder=\"Password\" v-model=\"value.password\" >\n                    <label for=\"inputPassword\">Password</label>\n                  </div>\n                  <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">{{type}}</button>\n                </form>\n                <br>\n                <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"btn\" @click=\"$emit('change')\">{{typechange}}</button>\n                <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"btn\" @click=\"$emit('googlelogin')\">Google Login</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</template>\n<script>\nexport default {\n  props:['value','type','typechange'],\n}\n</script>\n<style>\n\n</style>"},"lineCount":null}},"error":null,"hash":"0ef74b2a895a580d6d81c8625436596e","cacheData":{"env":{}}}